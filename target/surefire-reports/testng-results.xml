<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="15" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-01T17:50:42 IST" name="Command line suite" finished-at="2024-02-01T17:51:05 IST" duration-ms="22479">
    <groups>
    </groups>
    <test started-at="2024-02-01T17:50:42 IST" name="Command line test" finished-at="2024-02-01T17:51:05 IST" duration-ms="22479">
      <class name="Endpoints.Login_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:Endpoints.Login_Test@2de56eb2]" started-at="2024-02-01T17:50:58 IST" name="setup" finished-at="2024-02-01T17:50:58 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginIntoQtrip()[pri:0, instance:Endpoints.Login_Test@2de56eb2]" started-at="2024-02-01T17:50:58 IST" name="loginIntoQtrip" description="Login with Valid Credentials" finished-at="2024-02-01T17:50:59 IST" duration-ms="1284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginIntoQtrip -->
        <test-method signature="loginIntoQtrip1()[pri:0, instance:Endpoints.Login_Test@2de56eb2]" started-at="2024-02-01T17:50:59 IST" name="loginIntoQtrip1" description="Login with Invalid Credentials" finished-at="2024-02-01T17:51:01 IST" duration-ms="1331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginIntoQtrip1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Endpoints.Login_Test@2de56eb2]" started-at="2024-02-01T17:51:01 IST" name="tearDown" finished-at="2024-02-01T17:51:01 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Endpoints.Login_Test -->
      <class name="Endpoints.GetCity_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:Endpoints.GetCity_Test@6f204a1a]" started-at="2024-02-01T17:50:53 IST" name="setup" finished-at="2024-02-01T17:50:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAllCity()[pri:0, instance:Endpoints.GetCity_Test@6f204a1a]" started-at="2024-02-01T17:50:53 IST" name="getAllCity" description="Verify All City Listed" finished-at="2024-02-01T17:50:54 IST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCity -->
        <test-method signature="getAllCity1()[pri:0, instance:Endpoints.GetCity_Test@6f204a1a]" started-at="2024-02-01T17:50:54 IST" name="getAllCity1" description="Search for a Specify City" finished-at="2024-02-01T17:50:56 IST" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCity1 -->
        <test-method signature="getAllCity3()[pri:0, instance:Endpoints.GetCity_Test@6f204a1a]" started-at="2024-02-01T17:50:56 IST" name="getAllCity3" description="Search for a Invalid City" finished-at="2024-02-01T17:50:57 IST" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCity3 -->
        <test-method signature="getAllCity4()[pri:0, instance:Endpoints.GetCity_Test@6f204a1a]" started-at="2024-02-01T17:50:57 IST" name="getAllCity4" description="search query length &lt;3" finished-at="2024-02-01T17:50:58 IST" duration-ms="1250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllCity4 -->
      </class> <!-- Endpoints.GetCity_Test -->
      <class name="Endpoints.GetAdventuredetails_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:Endpoints.GetAdventuredetails_Test@239a307b]" started-at="2024-02-01T17:50:42 IST" name="setup" finished-at="2024-02-01T17:50:43 IST" duration-ms="1093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="search_For_Adventure()[pri:0, instance:Endpoints.GetAdventuredetails_Test@239a307b]" started-at="2024-02-01T17:50:43 IST" name="search_For_Adventure" description="Search for Adventure with valid Id" finished-at="2024-02-01T17:50:47 IST" duration-ms="3406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search_For_Adventure -->
        <test-method signature="search_For_Adventure_with_InvalidID()[pri:0, instance:Endpoints.GetAdventuredetails_Test@239a307b]" started-at="2024-02-01T17:50:47 IST" name="search_For_Adventure_with_InvalidID" description="Search for Adventure with Invalid Id" finished-at="2024-02-01T17:50:48 IST" duration-ms="1270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search_For_Adventure_with_InvalidID -->
      </class> <!-- Endpoints.GetAdventuredetails_Test -->
      <class name="Endpoints.Register_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:Endpoints.Register_Test@5f8e8a9d]" started-at="2024-02-01T17:51:01 IST" name="setup" finished-at="2024-02-01T17:51:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createUser()[pri:0, instance:Endpoints.Register_Test@5f8e8a9d]" started-at="2024-02-01T17:51:01 IST" name="createUser" description="create New User" finished-at="2024-02-01T17:51:02 IST" duration-ms="1336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="createUserPwd()[pri:0, instance:Endpoints.Register_Test@5f8e8a9d]" started-at="2024-02-01T17:51:02 IST" name="createUserPwd" description="create New User With Password less that 6 charactr" finished-at="2024-02-01T17:51:03 IST" duration-ms="1305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserPwd -->
        <test-method signature="createUserWithExistingEmail()[pri:0, instance:Endpoints.Register_Test@5f8e8a9d]" started-at="2024-02-01T17:51:03 IST" name="createUserWithExistingEmail" description="create New User With Existing Email" finished-at="2024-02-01T17:51:05 IST" depends-on-methods="Endpoints.Register_Test.createUser" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserWithExistingEmail -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Endpoints.Register_Test@5f8e8a9d]" started-at="2024-02-01T17:51:05 IST" name="tearDown" finished-at="2024-02-01T17:51:05 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Endpoints.Register_Test -->
      <class name="Endpoints.Getadventure_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:48 IST" name="setup" finished-at="2024-02-01T17:50:48 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="getAdventureDetails()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:48 IST" name="getAdventureDetails" description="Search AdventureDetais for a city" finished-at="2024-02-01T17:50:49 IST" duration-ms="1348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdventureDetails -->
        <test-method signature="getAdventureDetails_With_Adventure_name()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:50 IST" name="getAdventureDetails_With_Adventure_name" description="Search AdventureDetais for a city and Advanture Name" finished-at="2024-02-01T17:50:51 IST" duration-ms="1220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdventureDetails_With_Adventure_name -->
        <test-method signature="getAdventureDetails_With_Invalid_City()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:51 IST" name="getAdventureDetails_With_Invalid_City" description="Search AdventureDetais for a Invalid city" finished-at="2024-02-01T17:50:52 IST" duration-ms="1228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdventureDetails_With_Invalid_City -->
        <test-method signature="getAdventureDetails_With_Invalid_City_And_Adventure()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:52 IST" name="getAdventureDetails_With_Invalid_City_And_Adventure" description="Search AdventureDetais for a Invalid city with Adventure Details" finished-at="2024-02-01T17:50:53 IST" duration-ms="1257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAdventureDetails_With_Invalid_City_And_Adventure -->
        <test-method is-config="true" signature="afterClassMethod()[pri:0, instance:Endpoints.Getadventure_Test@2a8448fa]" started-at="2024-02-01T17:50:53 IST" name="afterClassMethod" finished-at="2024-02-01T17:50:53 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassMethod -->
      </class> <!-- Endpoints.Getadventure_Test -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
